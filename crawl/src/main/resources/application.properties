spring.config.import=optional:file:.env[.properties]
spring.application.name=${APP_NAME}

# MySQL
spring.datasource.url=jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DATABASE}?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
spring.datasource.username=${MYSQL_USERNAME}
spring.datasource.password=${MYSQL_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO}
spring.jpa.show-sql=${JPA_SHOW_SQL}
spring.jpa.properties.hibernate.format_sql=${JPA_FORMAT_SQL}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Kafka ??
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.group-id=news-crawl-group
kafka.topic.news-crawl=news-crawl-topic
kafka.topic.news-ai=news-ai-topic
kafka.topic.news-db=news-db-topic
kafka.topic.news-notification = news-notification-topic
kafka.consumer.group.news-ai=news-ai-group
kafka.consumer.group.news-db=news-db-group
kafka.consumer.group.news-notification=news-notification-group

# fast api
news.ai.url=${NEWS_AI_URL}

server.servlet.context-path=${SERVER_CONTEXT_PATH}

fcm.server.key=${FCM_SERVER_KEY}
fcm.api.url=${FCM_API_URL}

