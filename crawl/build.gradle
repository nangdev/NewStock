plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.9'
	id 'io.spring.dependency-management' version '1.1.7'
}

version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	queryDslVersion = '5.0.0'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// External API ( WebClient )
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.kafka:spring-kafka'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	// QueryDsl
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Crawling
	implementation 'com.rometools:rome:1.18.0'
	implementation 'org.jsoup:jsoup:1.15.4'
	implementation 'io.github.bonigarcia:webdrivermanager:5.5.3'
	implementation 'org.seleniumhq.selenium:selenium-java:4.25.0'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Firebase
	implementation 'com.google.firebase:firebase-admin:9.2.0'
	implementation 'com.google.auth:google-auth-library-oauth2-http:1.20.0'
}

tasks.named('test') {
	useJUnitPlatform()
}
