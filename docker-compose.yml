version: '3'

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    restart: unless-stopped
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - /opt/certs:/certs:ro
    
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    volumes:
      - /home/ubuntu/imgs/stock_images:/app/uploads
    env_file:
      - ./.env
    restart: unless-stopped
    depends_on:
      - mysql
  
  selenium-hub:
    image: selenium/hub:4.16.1
    container_name: selenium-hub
    ports:
      - "4444:4444"
    environment:
      - GRID_MAX_SESSION=20
      - GRID_BROWSER_TIMEOUT=300000
      - GRID_TIMEOUT=300
      - SE_SESSION_REQUEST_TIMEOUT=300
      - SE_NODE_SESSION_TIMEOUT=300
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: '1'

  chrome:
    image: selenium/node-chrome:4.16.1
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - NODE_MAX_INSTANCES=5
      - NODE_MAX_SESSION=5
      - SE_NODE_SESSION_TIMEOUT=300
      - SE_NODE_GRID_URL=http://selenium-hub:4444
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    shm_size: 4g

  crawl:
    build:
      context: ./crawl
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - PLAYWRIGHT_ENABLED=false
      - CRAWLER_CONCURRENT_WORKERS=2    # 크롤러 동시 작업자 수 제한
      - CRAWLER_RATE_LIMIT=1000         # 요청 간 지연 시간(ms)
    env_file:
      - ./crawl/.env
    depends_on:
      - selenium-hub
      - mysql
      - kafka
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: '1'
  
  mysql:
    image: mysql:8.0.33
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    restart: unless-stopped


  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_HEAP_OPTS=-Xmx1g -Xms512m  # 따옴표 제거
      - KAFKA_JVM_PERFORMANCE_OPTS=-XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35
    depends_on:
      - zookeeper
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1.5g
          cpus: '0.5'

  
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - JVMFLAGS=-Xmx256m -Xms128m  # JVM 메모리 제한
    ports:
      - "2181:2181"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 0.5g
          cpus: '0.5'

volumes:
  db-data: