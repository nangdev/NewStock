server{
    listen 80;
    server_name j12a304.p.ssafy.io;

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name j12a304.p.ssafy.io;

    # SSL 인증서 설정 - 경로 수정
    ssl_certificate /certs/fullchain.pem;
    ssl_certificate_key /certs/privkey.pem;

    # SSL 설정 최적화
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # WebSocket 연결을 위한 설정 - /api/ws 경로로 변경
    location /api/ws {
        proxy_pass http://backend:8080/api/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket 타임아웃 설정
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
    }

    # API 요청을 백엔드로 프록시
    location /api {
        proxy_pass http://backend:8080/api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS 설정 (모바일 앱 개발 중 필요할 수 있음)
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';

        # OPTIONS 요청 처리
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # 포트 8080으로의 WebSocket 리다이렉트 처리 (필요한 경우)
    location = /ws {
        return 301 wss://$host/api/ws;
    }

    # 기본 상태 체크용 엔드포인트
    location / {
        charset utf-8;
        add_header Content-Type "text/html; charset=utf-8";
        return 200 '<html><head><meta charset="utf-8"><title>J12A304 서버</title></head><body><h1>J12A304 모바일 앱 백엔드 서버가 정상 작동 중입니다</h1><p>현재 시간: $time_local</p></body></html>';
    }
}