stages:
  - deploy

variables:
  # Docker 관련 변수 제거 (Runner의 Docker를 사용)

deploy:
  stage: deploy
  tags:
    - newstock
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - |
      ssh -i ~/.ssh/id_rsa ubuntu@$SERVER_IP "
        cd /home/ubuntu/S12P21A304 &&
        git pull &&

        # 환경 변수 파일 생성
        echo \\"APP_NAME=$APP_NAME\\" > backend/.env &&
        echo \\"MYSQL_HOST=$MYSQL_HOST\\" >> backend/.env &&
        echo \\"MYSQL_PORT=$MYSQL_PORT\\" >> backend/.env &&
        echo \\"MYSQL_DATABASE=$MYSQL_DATABASE\\" >> backend/.env &&
        echo \\"MYSQL_USERNAME=$MYSQL_USERNAME\\" >> backend/.env &&
        echo \\"MYSQL_PASSWORD=$MYSQL_PASSWORD\\" >> backend/.env &&
        echo \\"JPA_DDL_AUTO=$JPA_DDL_AUTO\\" >> backend/.env &&
        echo \\"JPA_SHOW_SQL=$JPA_SHOW_SQL\\" >> backend/.env &&
        echo \\"JPA_FORMAT_SQL=$JPA_FORMAT_SQL\\" >> backend/.env &&
        echo \\"SERVER_CONTEXT_PATH=$SERVER_CONTEXT_PATH\\" >> backend/.env &&

        # 루트 .env 파일도 생성 (docker-compose에서 사용)
        echo \\"MYSQL_DATABASE=$MYSQL_DATABASE\\" > .env &&
        echo \\"MYSQL_USERNAME=$MYSQL_USERNAME\\" >> .env &&
        echo \\"MYSQL_PASSWORD=$MYSQL_PASSWORD\\" >> .env &&
        echo \\"MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD\\" >> .env &&

        # 서버에서 직접 빌드 및 배포
        docker-compose build &&
        docker-compose down &&
        docker-compose up -d
      "
  only:
    - feat/infra