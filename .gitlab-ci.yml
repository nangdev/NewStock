stages:
  - deploy

variables:
  # Docker 관련 변수 제거 (Runner의 Docker를 사용)
  # 공통 변수 설정

# 배포 작업 (브랜치별 서비스 배포)
deploy:
  stage: deploy
  tags:
    - newstock
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - |
      ssh -i ~/.ssh/id_rsa ubuntu@$SERVER_IP "
        cd /home/ubuntu/S12P21A304 && 

        git fetch &&
        git checkout $CI_COMMIT_REF_NAME &&
        git pull &&
        
        # 환경 변수 파일 생성
        # 공통 환경 변수
        echo \"MYSQL_DATABASE=$MYSQL_DATABASE\" > .env &&
        echo \"MYSQL_USERNAME=$MYSQL_USERNAME\" >> .env &&
        echo \"MYSQL_PASSWORD=$MYSQL_PASSWORD\" >> .env &&
        echo \"MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD\" >> .env &&
        echo \"KAFKA_BOOTSTRAP_SERVERS=$KAFKA_BOOTSTRAP_SERVERS\" >> .env &&
        
        # 브랜치별 배포 처리
        if [[ \"$CI_COMMIT_REF_NAME\" == \"dev/service\" ]]; then
          # 백엔드 환경 변수
          echo \"APP_NAME=$APP_NAME\" > backend/.env &&
          echo \"MYSQL_HOST=$MYSQL_HOST\" >> backend/.env &&
          echo \"MYSQL_PORT=$MYSQL_PORT\" >> backend/.env &&
          echo \"MYSQL_DATABASE=$MYSQL_DATABASE\" >> backend/.env &&
          echo \"MYSQL_USERNAME=$MYSQL_USERNAME\" >> backend/.env &&
          echo \"MYSQL_PASSWORD=$MYSQL_PASSWORD\" >> backend/.env &&
          echo \"JPA_DDL_AUTO=$JPA_DDL_AUTO\" >> backend/.env &&
          echo \"JPA_SHOW_SQL=$JPA_SHOW_SQL\" >> backend/.env &&
          echo \"JPA_FORMAT_SQL=$JPA_FORMAT_SQL\" >> backend/.env &&
          echo \"SERVER_CONTEXT_PATH=$SERVER_CONTEXT_PATH\" >> backend/.env &&
          echo \"kakao.client-id=$KAKAO_CLIENT_ID\" >> backend/.env &&
          echo \"kakao.redirect-uri=$KAKAO_REDIRECT_URI\" >> backend/.env &&
          echo \"JWT_SECRET=$JWT_SECRET\" >> backend/.env &&
          
          # API 서버와 Nginx 재배포
          echo \"dev/service 브랜치: API 서버와 Nginx 배포 중...\"
          docker-compose build backend nginx
          docker-compose up -d --no-deps backend nginx
          
        elif [[ \"$CI_COMMIT_REF_NAME\" == \"dev/crawl\" ]]; then
          
          # 크롤러 환경 변수
          echo \"APP_NAME=$APP_NAME\" > crawl/.env &&
          echo \"MYSQL_HOST=$MYSQL_HOST\" >> crawl/.env &&
          echo \"MYSQL_PORT=$MYSQL_PORT\" >> crawl/.env &&
          echo \"MYSQL_DATABASE=$MYSQL_DATABASE\" >> crawl/.env &&
          echo \"MYSQL_USERNAME=$MYSQL_USERNAME\" >> crawl/.env &&
          echo \"MYSQL_PASSWORD=$MYSQL_PASSWORD\" >> crawl/.env &&
          echo \"JPA_DDL_AUTO=$JPA_DDL_AUTO\" >> crawl/.env &&
          echo \"JPA_SHOW_SQL=$JPA_SHOW_SQL\" >> crawl/.env &&
          echo \"JPA_FORMAT_SQL=$JPA_FORMAT_SQL\" >> crawl/.env &&
          echo \"SERVER_CONTEXT_PATH=$SERVER_CONTEXT_PATH\" >> crawl/.env &&
          echo \"KAFKA_BOOTSTRAP_SERVERS=$KAFKA_BOOTSTRAP_SERVERS\" >> crawl/.env &&
          
          # 크롤러만 재배포
          echo \"dev/crawl 브랜치: 크롤러 서비스 배포 중...\"
          docker-compose build crawl
          docker-compose up -d --no-deps crawl
          
        elif [[ \"$CI_COMMIT_REF_NAME\" == \"dev/be\" ]]; then
          # 모든 환경 변수 설정
          echo \"APP_NAME=$APP_NAME\" > backend/.env &&
          echo \"MYSQL_HOST=$MYSQL_HOST\" >> backend/.env &&
          echo \"MYSQL_PORT=$MYSQL_PORT\" >> backend/.env &&
          echo \"MYSQL_DATABASE=$MYSQL_DATABASE\" >> backend/.env &&
          echo \"MYSQL_USERNAME=$MYSQL_USERNAME\" >> backend/.env &&
          echo \"MYSQL_PASSWORD=$MYSQL_PASSWORD\" >> backend/.env &&
          echo \"JPA_DDL_AUTO=$JPA_DDL_AUTO\" >> backend/.env &&
          echo \"JPA_SHOW_SQL=$JPA_SHOW_SQL\" >> backend/.env &&
          echo \"JPA_FORMAT_SQL=$JPA_FORMAT_SQL\" >> backend/.env &&
          echo \"SERVER_CONTEXT_PATH=$SERVER_CONTEXT_PATH\" >> backend/.env &&
          echo \"kakao.client-id=$KAKAO_CLIENT_ID\" >> backend/.env &&
          echo \"kakao.redirect-uri=$KAKAO_REDIRECT_URI\" >> backend/.env &&
          echo \"JWT_SECRET=$JWT_SECRET\" >> backend/.env &&
          
          # 크롤러 환경 변수
          echo \"APP_NAME=$APP_NAME\" > crawl/.env &&
          echo \"MYSQL_HOST=$MYSQL_HOST\" >> crawl/.env &&
          echo \"MYSQL_PORT=$MYSQL_PORT\" >> crawl/.env &&
          echo \"MYSQL_DATABASE=$MYSQL_DATABASE\" >> crawl/.env &&
          echo \"MYSQL_USERNAME=$MYSQL_USERNAME\" >> crawl/.env &&
          echo \"MYSQL_PASSWORD=$MYSQL_PASSWORD\" >> crawl/.env &&
          echo \"JPA_DDL_AUTO=$JPA_DDL_AUTO\" >> crawl/.env &&
          echo \"JPA_SHOW_SQL=$JPA_SHOW_SQL\" >> crawl/.env &&
          echo \"JPA_FORMAT_SQL=$JPA_FORMAT_SQL\" >> crawl/.env &&
          echo \"SERVER_CONTEXT_PATH=$SERVER_CONTEXT_PATH\" >> crawl/.env &&
          echo \"KAFKA_BOOTSTRAP_SERVERS=$KAFKA_BOOTSTRAP_SERVERS\" >> crawl/.env &&

          
          # 전체 서비스 재배포
          echo \"dev/be 브랜치: 모든 서비스 배포 중...\"
          docker-compose down
          docker-compose build
          docker-compose up -d
        fi
      "
  rules:
    - if: '$CI_COMMIT_REF_NAME == "dev/service"'
    - if: '$CI_COMMIT_REF_NAME == "dev/crawl"'
    - if: '$CI_COMMIT_REF_NAME == "dev/be"'